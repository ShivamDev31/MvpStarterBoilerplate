apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.jakewharton.hugo'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        incremental = true
        preDexLibraries = false
        javaMaxHeapSize "2g"
    }

    flavorDimensions "apiVersion"

    productFlavors {
        dev {
            dimension "apiVersion"
            minSdkVersion config.devSdkVersion
        }

        prod {
            dimension "apiVersion"
            minSdkVersion config.minSdkVersion
        }
    }

    // If want to temporarily disable hugo
    /*hugo {
        enabled false
    }*/

}

retrolambda {
    jvmArgs '-noverify'
    incremental true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Google
    compile "com.android.support:appcompat-v7:${libs.support}"
    compile "com.android.support:cardview-v7:${libs.support}"
    compile "com.android.support:recyclerview-v7:${libs.support}"
    compile "com.android.support.constraint:constraint-layout:${libs.constraint_layout}"

    // Rxjava stuff
    compile "io.reactivex.rxjava2:rxjava:${libs.rxjava}"
    compile "io.reactivex.rxjava2:rxandroid:${libs.rxandroid}"

    // Butterknife
    compile "com.jakewharton:butterknife:${libs.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${libs.butterknife}"

    // Dagger
    compile "com.google.dagger:dagger:${libs.dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${libs.dagger}"
    retrolambdaConfig "net.orfjackal.retrolambda:retrolambda:2.5.1"

    // Networking libs
    compile "com.google.code.gson:gson:${libs.gson}"
    compile "com.squareup.retrofit2:retrofit:${libs.retrofit}"
    compile "com.squareup.retrofit2:converter-gson:${libs.retrofit}"
    compile "com.squareup.retrofit2:adapter-rxjava2:${libs.retrofit}"
    compile "com.squareup.okhttp3:okhttp:${libs.okhttp}"
    compile "com.squareup.okhttp3:logging-interceptor:${libs.okhttp}"
    compile "com.github.bumptech.glide:glide:${libs.glide}"

    // Misc
    compile "org.parceler:parceler-api:${libs.parceler}"
    annotationProcessor "org.parceler:parceler:${libs.parceler}"
    compile "com.jakewharton.timber:timber:${libs.timber}"
    debugCompile "com.facebook.stetho:stetho-okhttp3:${libs.stetho}"

    // Crashing
    compile("com.crashlytics.sdk.android:crashlytics:${libs.crashlytics}@aar") {
        transitive = true
    }

    // Uncomment incase of multidexing
    //compile 'com.android.support:multidex:1.0.1'

    // Leak canary
    debugCompile "com.squareup.leakcanary:leakcanary-android:${libs.leakcanary}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${libs.leakcanary}"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${libs.leakcanary}"

    // Testing
    androidTestCompile "com.android.support:support-annotations:${libs.support}"
    androidTestCompile "com.android.support.test.espresso:espresso-core:${testing.espresso}"
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:${testing.mockito}"

    // Testing
    androidTestCompile("com.android.support.test.espresso:espresso-core:${testing.espresso}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:${testing.junit}"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
}
